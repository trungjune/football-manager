// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  team      Team?    @relation(fields: [teamId], references: [id])
  teamId    String?
}

model Team {
  id          String    @id @default(uuid())
  name        String
  description String?
  logo        String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  users       User[]
  members     Member[]
  matches     Match[]
  finances    Finance[]
}

model Member {
  id         String       @id @default(uuid())
  name       String
  position   String
  phone      String?
  birthYear  Int?
  rank       Int?         @default(3)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  team       Team         @relation(fields: [teamId], references: [id])
  teamId     String
  attendance Attendance[]
}

model Match {
  id          String   @id @default(uuid())
  opponent    String
  date        DateTime
  location    String
  result      String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  team        Team     @relation(fields: [teamId], references: [id])
  teamId      String
}

model Finance {
  id          String   @id @default(uuid())
  type        String
  amount      Float
  description String?
  month       Int?
  year        Int?
  date        DateTime
  memberId    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  team        Team     @relation(fields: [teamId], references: [id])
  teamId      String
}

model Attendance {
  id        String   @id @default(uuid())
  date      DateTime
  status    Boolean  @default(true)
  member    Member   @relation(fields: [memberId], references: [id])
  memberId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([memberId, date])
}
